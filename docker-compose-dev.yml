version: "3.7"

services:
    phrase-wrapper:
        build:
            dockerfile: Dockerfile.dev
            context: .
        image: phrase-wrapper
        container_name: phrase-wrapper
        networks:
            - phrase-net
        environment:
            ARANGO_ROOT_PASSWORD: ${ARANGO_ROOT_PASSWORD}
            ARANGO_DATABASE: ${ARANGO_DATABASE}
            PHRASE_COLLECTION: ${PHRASE_COLLECTION}
            ARANGO_USER: ${ARANGO_USER}
            ARANGO_PASS: ${ARANGO_PASS}
            ARANGO_HOST: ${ARANGO_HOST}
            ARANGO_PORT: ${ARANGO_PORT}
            API_KEY: ${API_KEY}
            NER_COLLECTION: ${NER_COLLECTION}
            STOP_COLLECTION: ${STOP_COLLECTION}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_PORT: ${MYSQL_PORT}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            WEB_CONCURRENCY: ${WEB_CONCURRENCY}
            REPEATED_NE_COLLECTION: ${REPEATED_NE_COLLECTION}
            REPEATED_STOPS_COLLECTION: ${REPEATED_STOPS_COLLECTION}
            WORD_COLLECTION: ${WORD_COLLECTION}
            WORD_EDGE_COLLECTION: ${WORD_EDGE_COLLECTION}
            LOG_LEVEL: ${LOG_LEVEL}
        volumes:
            - .:/app/
            - /app/.venv
        ports:
            - "8000:80"
            - "8005:8005"

    phrase-db:
        image: arangodb
        container_name: phrase-db
        restart: always
        networks:
            - phrase-net
        environment:
            ARANGO_ROOT_PASSWORD: ${ARANGO_ROOT_PASSWORD}
            ARANGO_DATABASE: ${ARANGO_DATABASE}
            PHRASE_COLLECTION: ${PHRASE_COLLECTION}
            ARANGO_USER: ${ARANGO_USER}
            ARANGO_PASS: ${ARANGO_PASS}
            ARANGO_HOST: ${ARANGO_HOST}
            ARANGO_PORT: ${ARANGO_PORT}
            ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY: ${ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY}
        ports:
            - 8081:8529
        volumes:
            - phrase-vol:/var/lib/arangodb3
            - ./arango.conf:/etc/arangodb3/arangod.conf

    news-db:
        image: mysql
        container_name: news-db
        restart: always
        networks:
            - phrase-net
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - 8082:3306
        volumes:
            - news-vol:/var/lib/mysql

    adminer:
        image: adminer:latest
        container_name: phrase-adminer
        networks:
            - phrase-net
        ports:
            - 8080:8080
    # prometheus:
    #     image: prom/prometheus
    #     container_name: prometheus
    #     networks:
    #         - phrase-net
    #     restart: always
    #     ports:
    #         - 9090:9090
    #     volumes:
    #         - ./prometheus.yml:/etc/prometheus/prometheus.yml

networks:
    phrase-net:
        name: phrase-net

volumes:
    phrase-vol:
        name: phrase-vol
        driver: local
        driver_opts:
            type: 'none'
            o: 'bind'
            device: '/data/docker-volumes/phrase-vol/'

    news-vol:
        name: news-vol
        driver: local
        driver_opts:
            type: 'none'
            o: 'bind'
            device: '/data/docker-volumes/news-vol/'
